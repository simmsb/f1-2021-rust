use binrw::BinRead;
use std::{error::Error, io::Cursor};

use f1_2021_rust::{Body, Packet};

static LAP_DATA_EXAMPLE: &[u8] = &[
    229, 7, 1, 5, 1, 2, 87, 47, 83, 174, 11, 32, 201, 212, 50, 202, 8, 69, 181, 173, 0, 0, 19, 255,
    243, 129, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 161, 112, 69, 108, 14, 23, 70, 0, 0, 0, 128, 5, 3,
    0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 0, 0, 0, 0, 49, 125, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    192, 73, 66, 53, 164, 227, 70, 0, 0, 0, 128, 1, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0,
    0, 0, 255, 135, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 13, 48, 67, 78, 185, 137, 70, 0, 0, 0, 128,
    13, 5, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0, 177, 131, 1, 0, 247, 93, 0, 0, 0, 0,
    0, 0, 240, 123, 187, 68, 3, 132, 193, 70, 0, 0, 0, 128, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2,
    0, 0, 0, 0, 0, 0, 80, 138, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 205, 66, 64, 13, 228, 70, 0,
    0, 0, 128, 15, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 45, 138, 1, 0, 221, 155,
    1, 0, 229, 146, 215, 180, 64, 197, 181, 69, 131, 202, 181, 70, 0, 0, 0, 128, 16, 4, 1, 0, 2, 0,
    0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 213, 135, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 115, 219, 66,
    200, 26, 228, 70, 0, 0, 0, 128, 11, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 215,
    134, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 92, 253, 66, 106, 145, 31, 71, 0, 0, 0, 128, 10, 9, 1, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 79, 148, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 117, 23,
    67, 63, 110, 228, 70, 0, 0, 0, 128, 19, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0,
    72, 132, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 212, 46, 66, 191, 150, 227, 70, 0, 0, 0, 128, 8, 7,
    1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 191, 135, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    168, 211, 65, 49, 45, 31, 71, 0, 0, 0, 128, 7, 9, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0,
    0, 0, 118, 131, 1, 0, 205, 2, 0, 0, 0, 0, 0, 0, 0, 176, 118, 65, 158, 104, 8, 71, 0, 0, 0, 128,
    2, 7, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 101, 137, 1, 0, 222, 252, 0, 0, 11,
    144, 0, 0, 144, 169, 102, 69, 204, 195, 22, 71, 0, 0, 0, 128, 9, 7, 0, 0, 1, 0, 0, 0, 0, 0, 0,
    1, 2, 0, 0, 0, 0, 0, 0, 199, 130, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 191, 183, 66, 67, 171,
    184, 69, 0, 0, 0, 128, 4, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 134, 138, 1, 0,
    228, 80, 1, 0, 15, 148, 85, 181, 228, 64, 153, 69, 199, 199, 4, 71, 0, 0, 0, 128, 17, 6, 0, 0,
    2, 0, 0, 0, 0, 0, 1, 2, 2, 0, 0, 0, 0, 0, 0, 102, 136, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 121,
    59, 67, 172, 20, 9, 71, 0, 0, 0, 128, 14, 8, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 0, 0,
    63, 139, 1, 0, 211, 218, 0, 0, 48, 145, 0, 0, 120, 245, 62, 69, 243, 170, 205, 70, 0, 0, 0,
    128, 12, 5, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 0, 0, 0, 0, 171, 144, 1, 0, 4, 64, 1, 0, 17,
    147, 0, 0, 232, 202, 144, 69, 25, 44, 49, 71, 0, 0, 0, 128, 18, 8, 0, 0, 1, 0, 0, 0, 0, 0, 0,
    1, 2, 0, 0, 0, 0, 0, 0, 42, 130, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 244, 117, 66, 62, 71, 182,
    70, 0, 0, 0, 128, 3, 6, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 9, 195, 180, 197, 9, 195, 180, 197, 0, 0, 0, 128, 20, 1, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
];

#[test]
fn test_lap_data() -> Result<(), Box<dyn Error>> {
    let pkt = Packet::read(&mut Cursor::new(LAP_DATA_EXAMPLE))?;

    // eprintln!("{:#?}", pkt);
    // assert!(false);

    assert!(matches!(pkt.body, Body::LapData(_)));

    Ok(())
}
