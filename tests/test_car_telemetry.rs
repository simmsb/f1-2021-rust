use binrw::BinRead;
use std::{error::Error, io::Cursor};

use f1_2021_rust::{Body, Packet};

static DATA_EXAMPLE: &[u8] = &[
    229, 7, 1, 5, 1, 6, 243, 94, 175, 135, 75, 113, 93, 192, 173, 155, 21, 69, 237, 186, 0, 0, 19,
    255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 118, 16, 0, 0, 0, 0, 103, 0, 103, 0,
    103, 0, 103, 0, 71, 71, 76, 74, 79, 79, 80, 80, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65,
    154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 31, 1, 0, 0, 128, 63, 152, 211, 91, 189, 0,
    0, 0, 0, 0, 7, 251, 44, 0, 58, 224, 3, 200, 0, 201, 0, 141, 0, 141, 0, 85, 100, 83, 96, 84, 85,
    82, 84, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 222, 16, 0, 0, 0, 0, 195, 3, 193, 3,
    163, 3, 163, 3, 71, 71, 74, 73, 80, 79, 81, 81, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65,
    154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0,
    0, 0, 118, 16, 0, 0, 0, 0, 102, 0, 102, 0, 102, 0, 102, 0, 71, 70, 76, 74, 80, 80, 80, 80, 90,
    0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 139,
    0, 188, 111, 6, 63, 48, 223, 208, 61, 0, 0, 0, 0, 0, 3, 252, 40, 0, 0, 0, 0, 213, 2, 209, 2, 8,
    3, 0, 3, 88, 77, 90, 77, 84, 84, 85, 84, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153,
    177, 65, 154, 153, 177, 65, 1, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 195,
    16, 0, 0, 0, 0, 154, 3, 158, 3, 107, 3, 109, 3, 68, 69, 66, 64, 77, 77, 78, 78, 90, 0, 205,
    204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 244, 0, 0,
    0, 128, 63, 143, 39, 111, 61, 0, 0, 0, 0, 0, 6, 187, 43, 0, 23, 0, 0, 132, 2, 130, 2, 105, 2,
    102, 2, 83, 80, 79, 75, 86, 85, 85, 84, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153,
    177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 56, 1, 34, 105, 108, 63, 181, 233, 162, 61, 0, 0, 0, 0,
    0, 8, 160, 42, 0, 0, 0, 0, 8, 1, 8, 1, 191, 0, 190, 0, 90, 84, 90, 84, 84, 84, 82, 83, 90, 0,
    205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 82, 0,
    0, 0, 0, 0, 70, 105, 233, 62, 0, 0, 0, 0, 0, 2, 248, 29, 0, 0, 0, 0, 150, 3, 147, 3, 195, 3,
    191, 3, 78, 76, 82, 81, 83, 85, 82, 83, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153,
    177, 65, 154, 153, 177, 65, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 101,
    13, 0, 0, 0, 0, 218, 0, 218, 0, 218, 0, 218, 0, 75, 74, 87, 84, 82, 82, 83, 83, 90, 0, 205,
    204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 22, 1, 0, 0,
    128, 63, 95, 249, 85, 61, 0, 0, 0, 0, 0, 7, 158, 43, 0, 20, 0, 0, 29, 2, 29, 2, 219, 1, 220, 1,
    94, 82, 88, 77, 86, 83, 84, 82, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65,
    154, 153, 177, 65, 0, 0, 0, 0, 222, 0, 0, 0, 0, 0, 169, 16, 230, 189, 0, 0, 0, 0, 0, 5, 136,
    45, 0, 75, 224, 127, 134, 2, 131, 2, 109, 2, 106, 2, 86, 83, 84, 79, 88, 84, 86, 84, 90, 0,
    205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 221, 0,
    0, 0, 128, 63, 227, 48, 175, 61, 0, 0, 0, 0, 0, 5, 151, 45, 0, 76, 224, 127, 170, 2, 169, 2,
    145, 2, 143, 2, 89, 80, 83, 73, 82, 84, 81, 82, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65,
    154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 31, 1, 0, 0, 128, 63, 254, 10, 79, 189, 0, 0,
    0, 0, 0, 8, 32, 39, 0, 0, 0, 0, 184, 0, 185, 0, 136, 0, 137, 0, 84, 99, 82, 95, 82, 84, 81, 82,
    90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 1, 0, 1,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 118, 16, 0, 0, 0, 0, 215, 0, 215, 0, 206, 0,
    205, 0, 67, 68, 66, 64, 76, 76, 77, 77, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153,
    177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 118,
    16, 0, 0, 0, 0, 99, 2, 103, 2, 69, 2, 71, 2, 67, 68, 69, 68, 76, 76, 77, 77, 90, 0, 205, 204,
    184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 39, 1, 0, 0, 128,
    63, 0, 0, 0, 128, 0, 0, 0, 0, 0, 8, 66, 40, 0, 0, 0, 0, 38, 1, 39, 1, 224, 0, 225, 0, 84, 84,
    81, 82, 82, 83, 80, 81, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154,
    153, 177, 65, 0, 0, 0, 0, 238, 0, 0, 0, 128, 63, 183, 104, 150, 189, 0, 0, 0, 0, 0, 6, 205, 42,
    0, 0, 0, 0, 160, 1, 159, 1, 116, 1, 113, 1, 81, 95, 75, 89, 85, 84, 84, 82, 90, 0, 205, 204,
    184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 194, 16, 0, 0, 0, 0, 161, 3, 161, 3, 147, 3, 147, 3, 73, 72,
    81, 79, 81, 81, 82, 82, 90, 0, 205, 204, 184, 65, 205, 204, 184, 65, 154, 153, 177, 65, 154,
    153, 177, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 118, 16, 0, 0, 0,
    0, 30, 0, 30, 0, 30, 0, 30, 0, 85, 85, 90, 90, 85, 85, 90, 90, 90, 0, 205, 204, 184, 65, 205,
    204, 184, 65, 154, 153, 177, 65, 154, 153, 177, 65, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 255, 0,
];

#[test]
fn test_car_telemetry() -> Result<(), Box<dyn Error>> {
    let pkt = Packet::read(&mut Cursor::new(DATA_EXAMPLE))?;

    // eprintln!("{:#?}", pkt);
    // assert!(false);

    assert!(matches!(pkt.body, Body::CarTelemetry(_)));

    Ok(())
}
