use binrw::BinRead;
use std::{error::Error, io::Cursor};

use f1_2021_rust::{Body, Packet};

static SESSION_DATA_EXAMPLE: &[u8] = &[
    229, 7, 1, 5, 1, 1, 87, 47, 83, 174, 11, 32, 201, 212, 27, 79, 153, 68, 104, 98, 0, 0, 19, 255,
    1, 30, 22, 200, 185, 22, 1, 13, 0, 69, 9, 16, 14, 80, 0, 0, 255, 0, 19, 54, 173, 235, 61, 0,
    65, 49, 27, 62, 0, 40, 80, 63, 62, 0, 24, 235, 87, 62, 0, 131, 165, 115, 62, 0, 82, 33, 154,
    62, 0, 77, 130, 173, 62, 0, 27, 19, 188, 62, 0, 5, 109, 217, 62, 0, 33, 12, 244, 62, 0, 34,
    175, 11, 63, 0, 95, 75, 27, 63, 0, 136, 84, 40, 63, 0, 58, 176, 48, 63, 0, 116, 10, 58, 63, 0,
    245, 169, 68, 63, 0, 154, 25, 85, 63, 0, 152, 237, 99, 63, 0, 28, 74, 118, 63, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 48, 1, 0, 1, 31, 2, 22, 2, 14, 1, 5, 1, 31, 2, 22, 2, 15, 1, 10, 1, 31,
    2, 22, 2, 15, 1, 15, 2, 31, 2, 22, 2, 15, 1, 30, 2, 30, 1, 22, 2, 15, 1, 45, 2, 30, 2, 22, 2,
    23, 1, 60, 2, 29, 1, 22, 2, 43, 2, 0, 2, 27, 1, 19, 1, 17, 2, 5, 2, 27, 2, 19, 2, 17, 2, 10, 2,
    27, 2, 19, 2, 17, 2, 15, 2, 27, 2, 19, 2, 17, 2, 30, 2, 26, 1, 19, 2, 17, 2, 45, 2, 26, 2, 18,
    1, 17, 2, 60, 2, 26, 2, 18, 2, 17, 3, 0, 1, 29, 1, 21, 1, 8, 3, 5, 1, 29, 2, 21, 2, 8, 3, 10,
    1, 29, 2, 21, 2, 8, 3, 15, 1, 29, 2, 21, 2, 9, 3, 30, 1, 29, 2, 21, 2, 10, 3, 45, 1, 29, 2, 21,
    2, 11, 3, 60, 1, 29, 2, 21, 2, 11, 5, 0, 1, 29, 1, 20, 1, 8, 5, 5, 1, 29, 2, 20, 2, 8, 5, 10,
    1, 28, 1, 20, 2, 8, 5, 15, 1, 28, 2, 20, 2, 8, 5, 30, 1, 28, 2, 20, 2, 9, 5, 60, 1, 27, 1, 19,
    1, 9, 6, 0, 1, 29, 1, 20, 1, 8, 6, 5, 1, 29, 2, 20, 2, 8, 6, 10, 1, 28, 1, 20, 2, 8, 6, 15, 1,
    28, 2, 20, 2, 8, 6, 30, 1, 28, 2, 20, 2, 9, 6, 60, 1, 27, 1, 19, 1, 9, 7, 0, 1, 29, 1, 20, 1,
    8, 7, 5, 1, 29, 2, 20, 2, 8, 7, 10, 1, 28, 1, 20, 2, 8, 7, 15, 1, 28, 2, 20, 2, 8, 7, 30, 1,
    28, 2, 20, 2, 9, 7, 60, 1, 27, 1, 19, 1, 9, 10, 0, 0, 31, 2, 22, 2, 1, 10, 5, 0, 31, 2, 22, 2,
    1, 10, 10, 0, 31, 2, 22, 2, 1, 10, 15, 0, 31, 2, 22, 2, 1, 10, 30, 0, 31, 2, 22, 2, 1, 10, 45,
    0, 31, 2, 22, 2, 2, 10, 60, 0, 30, 1, 22, 2, 2, 10, 90, 0, 29, 1, 21, 1, 2, 10, 120, 0, 29, 2,
    20, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 1, 31, 219, 229, 119, 168, 219, 229, 119, 168, 219, 229, 119, 168, 0, 0, 0, 0, 2,
    3, 1, 1, 1, 1, 2, 1,
];

#[test]
fn test_session() -> Result<(), Box<dyn Error>> {
    let pkt = Packet::read(&mut Cursor::new(SESSION_DATA_EXAMPLE))?;

    assert!(matches!(pkt.body, Body::Session(_)));

    Ok(())
}
